
import java.io.*;
import java.util.logging.*;
import javax.swing.*;
import javax.swing.table.*;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author nacho
 */
public class GestorGUI extends javax.swing.JFrame {
       public String a[];
       public String auxString;
       public  Tabla auxTable;
        /**
     * Creates new form GestorGUI
     */
    public GestorGUI() {
        initComponents();
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textAreaQuery = new javax.swing.JTextArea();
        labelQuery = new javax.swing.JLabel();
        labelResult = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableResultQuery = new javax.swing.JTable();
        buttonEjecutar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 51, 102));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setName("GESTOR BD"); // NOI18N
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(153, 153, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        textAreaQuery.setColumns(20);
        textAreaQuery.setRows(5);
        jScrollPane1.setViewportView(textAreaQuery);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 58, 840, 150));

        labelQuery.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        labelQuery.setText("QUERY");
        jPanel1.add(labelQuery, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 28, -1, -1));

        labelResult.setBackground(new java.awt.Color(204, 204, 255));
        labelResult.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        labelResult.setText("RESULTADO DEL QUERY");
        jPanel1.add(labelResult, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 220, -1, -1));

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);

        tableResultQuery.setAutoCreateRowSorter(true);
        tableResultQuery.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tableResultQuery.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tableResultQuery.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tableResultQuery.setDebugGraphicsOptions(javax.swing.DebugGraphics.BUFFERED_OPTION);
        jScrollPane2.setViewportView(tableResultQuery);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 240, 645, 241));

        buttonEjecutar.setBackground(new java.awt.Color(0, 153, 102));
        buttonEjecutar.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        buttonEjecutar.setText("Ejecutar ");
        buttonEjecutar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEjecutarActionPerformed(evt);
            }
        });
        jPanel1.add(buttonEjecutar, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 310, 125, 51));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 931, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 513, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void printAllColumns(Tabla x){
        for(int j = 0; j<x.columnas.size();j++){
           GestorGUI.tablemodel.addColumn(x.columnas.get(j).nombre,x.columnas.get(j).instancias.toArray());
        }
        for(int j = 0; j<x.columnas.size();j++){
            GestorGUI.tableResultQuery.getColumnModel().getColumn(j).setPreferredWidth(100);
         }
    }
    
    public void tableFill(String nombre) throws FileNotFoundException, IOException{
        FileReader auxf;
        BufferedReader auxb;
        
        
                     auxf = new FileReader(nombre);
                     auxb = new BufferedReader(auxf);
                     
                     a=auxb.readLine().split(",");
        
                     auxTable = new Tabla(a[0],a);
                     auxString = auxb.readLine();
                    do{
                        auxTable.agreggate(auxString);
                        }while((auxString=auxb.readLine()) != null);
        
    }
    
    public void equalsColumn(String x, String y,Tabla t){
        int indexX=-1,indexY=-1;    
        
        for(int i=0;i<this.auxTable.columnas.size();i++){
            if(this.auxTable.columnas.get(i).nombre.equals(x))
                indexX=i;
            if(this.auxTable.columnas.get(i).nombre.equals(y))
                indexY=i;            
            }
        
        if(indexY==-1){
            int j=0;
            for(int i=0;i<this.auxTable.columnas.get(0).instancias.size();i++){
                if(!this.auxTable.columnas.get(indexX).instancias.get(i).trim().equals(y.trim())){
                    t.removeFila(i);
                    i--;
                }
            }        
        
        }
            
            
    }
    
    public void queryLine(String[] lineas) throws FileNotFoundException, IOException{
        String palabras[],nombreColumnas[]={},operaciones[],nombreArchivo;
        Tabla temporal = new Tabla("Query");
        
        
        for(int i =0;i<lineas.length;i++){
            palabras=lineas[i].split(" ");
            palabras[0]=palabras[0].substring(0,1).toUpperCase() + palabras[0].substring(1).toLowerCase();
            switch(palabras[0]){
                
                case "Select":{
                    nombreColumnas = palabras[1].split(", ");                    
                    break;
                }
                
                case "From":{
                    nombreArchivo = palabras[1] + ".txt";
                    tableFill(nombreArchivo);
                    
                    if(nombreColumnas[0].equals("*")){
                         for(int k=0;k<auxTable.columnas.size();k++){
                               temporal.columnas.add(auxTable.columnas.get(k));
                               }
                    }else{
                        for (int j =0;j<nombreColumnas.length;j++){
                            for(int k=0;k<auxTable.columnas.size();k++){
                                if(nombreColumnas[j].equals(auxTable.columnas.get(k).nombre)){
                                    temporal.columnas.add(auxTable.columnas.get(k));
                                }
                            }
                        }
                        if(temporal.columnas.size()<1)//OPTION PANE
                            System.out.println("No hay ninguna columna llamada de esa manera");
                    }
                    break;
                }
                case "Where":{
                    switch(palabras[2]){
                        case "=":{
                            equalsColumn(palabras[1],palabras[3],temporal);
                            printAllColumns(temporal);
                        break;
                        }
                    
                    }
                    
                    break;
                }
                
                case "Describe":{
                    
                }
            
        
            }
        }
    }
    
    
    private void buttonEjecutarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEjecutarActionPerformed
       
        String query = this.textAreaQuery.getText();
        String lineas[],palabras[],nombreColumnas[];
        
        lineas=query.split("\n");
        
            try {
                queryLine(lineas);
                
                /* try {
                auxf = new FileReader(query);
                auxb = new BufferedReader(auxf);
                
                a=auxb.readLine().split(",");
                
                auxTable = new Tabla(a[0],a);
                auxString = auxb.readLine();
                do{
                auxTable.agreggate(auxString);
                }while((auxString=auxb.readLine()) != null);
                
                } catch (FileNotFoundException ex) {
                Logger.getLogger(GestorGUI.class.getName()).log(Level.SEVERE, null, ex);
                }   catch (IOException ex) {
                Logger.getLogger(GestorGUI.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                
                for(int i = 0; i<auxTable.columnas.size();i++){
                GestorGUI.tablemodel.addColumn(auxTable.columnas.get(i).nombre,auxTable.columnas.get(i).instancias.toArray());
                GestorGUI.tableResultQuery.getColumnModel().getColumn(i).setPreferredWidth(200);
                }
                
                for(int i = 0; i<auxTable.columnas.size();i++){
                GestorGUI.tableResultQuery.getColumnModel().getColumn(i).setPreferredWidth(150);
                
                }*/
                // TODO add your handling code here:
            } catch (IOException ex) {
                Logger.getLogger(GestorGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_buttonEjecutarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static DefaultTableModel tablemodel;
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GestorGUI().setVisible(true);
                GestorGUI.tableResultQuery.setModel(tablemodel = new javax.swing.table.DefaultTableModel(
                                                                    new Object [][] {},new String [] {}));
            }
        });
    }

    public JTextArea getTextAreaQuery() {
        return textAreaQuery;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonEjecutar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelQuery;
    private javax.swing.JLabel labelResult;
    public static javax.swing.JTable tableResultQuery;
    private javax.swing.JTextArea textAreaQuery;
    // End of variables declaration//GEN-END:variables
}
